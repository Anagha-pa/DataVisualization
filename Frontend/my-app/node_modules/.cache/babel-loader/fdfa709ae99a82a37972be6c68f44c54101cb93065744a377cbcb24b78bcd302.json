{"ast":null,"code":"var _jsxFileName = \"/home/anagha/Datavisualization/Frontend/my-app/src/components/ExcelUploader.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { ExcelRenderer } from 'react-excel-renderer';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExcelUploader = () => {\n  _s();\n  const [data, setData] = useState([]);\n  const sendData = async () => {\n    try {\n      const response = await axios.post(\"http://localhost:8000/api/dataupload/excel-data/\", data, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      if (response.status === 200) {\n        console.log('Data set successfully');\n      } else {\n        console.log('Error sending data:', response.statusText);\n      }\n    } catch (error) {\n      console.log('Error sending dat:', error.message);\n    }\n  };\n  const handleFileUploader = event => {\n    const file = event.target.files[0];\n    ExcelRenderer(file, (err, result) => {\n      if (err) {\n        console.log(err);\n      } else {\n        setData(result);\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-3xl font-bold p-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"block mb-2 text-sm font-medium text-gray-900 dark:text-black\",\n        htmlFor: \"file_input\",\n        children: \"Upload file\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"block w-96 text-sm text-gray-900 border border-gray-300 rounded-lg cursor-pointer bg-gray-50 dark:text-gray-400 focus:outline-none dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400\",\n        id: \"file_input\",\n        type: \"file\",\n        onChange: handleFileUploader\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"focus:outline-none text-white bg-purple-700 hover:bg-purple-800 focus:ring-4 focus:ring-purple-300 font-medium rounded-lg text-sm px-5 py-1.5 mb-2 dark:bg-purple-600 dark:hover:bg-purple-700 dark:focus:ring-purple-900\",\n        onClick: sendData,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n_s(ExcelUploader, \"hhQqYsxLIv1exGOzUvDGOVv6fXw=\");\n_c = ExcelUploader;\nexport default ExcelUploader;\nvar _c;\n$RefreshReg$(_c, \"ExcelUploader\");","map":{"version":3,"names":["React","useState","ExcelRenderer","axios","jsxDEV","_jsxDEV","ExcelUploader","_s","data","setData","sendData","response","post","headers","status","console","log","statusText","error","message","handleFileUploader","event","file","target","files","err","result","children","className","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","id","type","onChange","onClick","_c","$RefreshReg$"],"sources":["/home/anagha/Datavisualization/Frontend/my-app/src/components/ExcelUploader.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { ExcelRenderer } from 'react-excel-renderer'; \nimport axios from 'axios';\n\nconst ExcelUploader = () => {\n    const [data, setData] = useState([]);\n\n    const sendData = async () => {\n        try{\n            const response = await axios.post(\"http://localhost:8000/api/dataupload/excel-data/\", data,{\n                headers:{\n                    'Content-Type': 'application/json',\n                },\n            });\n\n            if (response.status === 200){\n                console.log('Data set successfully');\n            }else{\n                console.log('Error sending data:', response.statusText);\n            } \n        }catch(error){\n            console.log('Error sending dat:',error.message);\n        }\n    };\n\n\n    const handleFileUploader = (event) => {\n        const file = event.target.files[0];\n\n        ExcelRenderer(file, (err, result) => { \n            if (err) {\n                console.log(err);\n            } else {\n                setData(result);\n            }\n        });\n    };\n  \n\n    return (\n        <div>\n            <h1 className=\"text-3xl font-bold p-8\">\n                <label className=\"block mb-2 text-sm font-medium text-gray-900 dark:text-black\" htmlFor=\"file_input\">Upload file</label>\n                <input\n                    className=\"block w-96 text-sm text-gray-900 border border-gray-300 rounded-lg cursor-pointer bg-gray-50 dark:text-gray-400 focus:outline-none dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400\"\n                    id=\"file_input\"\n                    type=\"file\"\n                    onChange={handleFileUploader}\n                />\n                <button\n                    type=\"button\"\n                    className=\"focus:outline-none text-white bg-purple-700 hover:bg-purple-800 focus:ring-4 focus:ring-purple-300 font-medium rounded-lg text-sm px-5 py-1.5 mb-2 dark:bg-purple-600 dark:hover:bg-purple-700 dark:focus:ring-purple-900\"\n                    onClick={sendData}\n                >Submit</button>\n            </h1>\n        </div>\n    );\n};\n\nexport default ExcelUploader;\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,aAAa,QAAQ,sBAAsB;AACpD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEpC,MAAMS,QAAQ,GAAG,MAAAA,CAAA,KAAY;IACzB,IAAG;MACC,MAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,IAAI,CAAC,kDAAkD,EAAEJ,IAAI,EAAC;QACvFK,OAAO,EAAC;UACJ,cAAc,EAAE;QACpB;MACJ,CAAC,CAAC;MAEF,IAAIF,QAAQ,CAACG,MAAM,KAAK,GAAG,EAAC;QACxBC,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;MACxC,CAAC,MAAI;QACDD,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEL,QAAQ,CAACM,UAAU,CAAC;MAC3D;IACJ,CAAC,QAAMC,KAAK,EAAC;MACTH,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAACE,KAAK,CAACC,OAAO,CAAC;IACnD;EACJ,CAAC;EAGD,MAAMC,kBAAkB,GAAIC,KAAK,IAAK;IAClC,MAAMC,IAAI,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAElCtB,aAAa,CAACoB,IAAI,EAAE,CAACG,GAAG,EAAEC,MAAM,KAAK;MACjC,IAAID,GAAG,EAAE;QACLV,OAAO,CAACC,GAAG,CAACS,GAAG,CAAC;MACpB,CAAC,MAAM;QACHhB,OAAO,CAACiB,MAAM,CAAC;MACnB;IACJ,CAAC,CAAC;EACN,CAAC;EAGD,oBACIrB,OAAA;IAAAsB,QAAA,eACItB,OAAA;MAAIuB,SAAS,EAAC,wBAAwB;MAAAD,QAAA,gBAClCtB,OAAA;QAAOuB,SAAS,EAAC,8DAA8D;QAACC,OAAO,EAAC,YAAY;QAAAF,QAAA,EAAC;MAAW;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACxH5B,OAAA;QACIuB,SAAS,EAAC,oMAAoM;QAC9MM,EAAE,EAAC,YAAY;QACfC,IAAI,EAAC,MAAM;QACXC,QAAQ,EAAEhB;MAAmB;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChC,CAAC,eACF5B,OAAA;QACI8B,IAAI,EAAC,QAAQ;QACbP,SAAS,EAAC,2NAA2N;QACrOS,OAAO,EAAE3B,QAAS;QAAAiB,QAAA,EACrB;MAAM;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEd,CAAC;AAAC1B,EAAA,CArDID,aAAa;AAAAgC,EAAA,GAAbhC,aAAa;AAuDnB,eAAeA,aAAa;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}